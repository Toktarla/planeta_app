// Mocks generated by Mockito 5.4.2 from annotations
// in untitled/test/data/repositories/gallery_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i2;
import 'package:untitled/features/data/data_sources/remote/gallery/gallery_api_service.dart'
    as _i3;
import 'package:untitled/features/domain/entities/gallery_entity.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GalleryApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGalleryApiService extends _i1.Mock implements _i3.GalleryApiService {
  MockGalleryApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResponse<_i5.GalleryEntity>> getPhotosByQuery({
    String? client_id,
    String? query,
    String? per_page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotosByQuery,
          [],
          {
            #client_id: client_id,
            #query: query,
            #per_page: per_page,
          },
        ),
        returnValue: _i4.Future<_i2.HttpResponse<_i5.GalleryEntity>>.value(
            _FakeHttpResponse_0<_i5.GalleryEntity>(
          this,
          Invocation.method(
            #getPhotosByQuery,
            [],
            {
              #client_id: client_id,
              #query: query,
              #per_page: per_page,
            },
          ),
        )),
      ) as _i4.Future<_i2.HttpResponse<_i5.GalleryEntity>>);
}
